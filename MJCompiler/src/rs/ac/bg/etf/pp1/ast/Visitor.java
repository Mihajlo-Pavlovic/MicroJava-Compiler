// generated with ast extension for cup
// version 0.8
// 28/5/2022 13:1:56


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Mulop Mulop);
    public void visit(FormParsOpt FormParsOpt);
    public void visit(Relop Relop);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(DesignatorOpt DesignatorOpt);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(LastFormPar LastFormPar);
    public void visit(SingelStatement SingelStatement);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(AddOpTermList AddOpTermList);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(VarAssignList VarAssignList);
    public void visit(FormParsList FormParsList);
    public void visit(Condition Condition);
    public void visit(IfCondition IfCondition);
    public void visit(ActualParamList ActualParamList);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(Extend Extend);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ActualPars ActualPars);
    public void visit(ConstAssignList ConstAssignList);
    public void visit(ConstAssign ConstAssign);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(BaseExp BaseExp);
    public void visit(Array Array);
    public void visit(ClassDecl ClassDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(SingleStatement SingleStatement);
    public void visit(FormPars FormPars);
    public void visit(Expop Expop);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(EnterMethodWArgs EnterMethodWArgs);
    public void visit(BaseExpExpr BaseExpExpr);
    public void visit(BaseExpNewClass BaseExpNewClass);
    public void visit(BaseExpNewArr BaseExpNewArr);
    public void visit(BaseExpBool BaseExpBool);
    public void visit(BaseExpChar BaseExpChar);
    public void visit(BaseExpNum BaseExpNum);
    public void visit(BaseExpDesignatorNoActPars BaseExpDesignatorNoActPars);
    public void visit(BaseExpDesignatorActPars BaseExpDesignatorActPars);
    public void visit(BaseExpDesignator BaseExpDesignator);
    public void visit(SingleBaseExp SingleBaseExp);
    public void visit(FactorList FactorList);
    public void visit(SingleFactor SingleFactor);
    public void visit(TermList TermList);
    public void visit(SingleTerm SingleTerm);
    public void visit(MinusTerm MinusTerm);
    public void visit(AddOpTermsList AddOpTermsList);
    public void visit(DoWhileEnd DoWhileEnd);
    public void visit(DoWhileBeggining DoWhileBeggining);
    public void visit(Else Else);
    public void visit(IfConditionErr IfConditionErr);
    public void visit(IfConditionNoErr IfConditionNoErr);
    public void visit(SingelStatementPrintNoNumConst SingelStatementPrintNoNumConst);
    public void visit(SingelStatementPrintNumConst SingelStatementPrintNumConst);
    public void visit(SingelStatementRead SingelStatementRead);
    public void visit(SingelStatementRetrunNoArg SingelStatementRetrunNoArg);
    public void visit(SingelStatementReturnArg SingelStatementReturnArg);
    public void visit(SingelStatementContinur SingelStatementContinur);
    public void visit(SingelStatementBreak SingelStatementBreak);
    public void visit(SingleStatementDoWhile SingleStatementDoWhile);
    public void visit(SingelStatementIfElse SingelStatementIfElse);
    public void visit(SingelStatementIf SingelStatementIf);
    public void visit(SingelStatementDesignatorStatement SingelStatementDesignatorStatement);
    public void visit(Lea Lea);
    public void visit(Les Les);
    public void visit(Gea Gea);
    public void visit(Gre Gre);
    public void visit(Nequ Nequ);
    public void visit(Equ Equ);
    public void visit(And And);
    public void visit(Or Or);
    public void visit(CondFactRelOp CondFactRelOp);
    public void visit(CondFactNoRelOp CondFactNoRelOp);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(CondTermList CondTermList);
    public void visit(SingelCondition SingelCondition);
    public void visit(ConditionList ConditionList);
    public void visit(DesignatorStatementEmptyParen DesignatorStatementEmptyParen);
    public void visit(DesignatorStatementActPars DesignatorStatementActPars);
    public void visit(DesignatorStatementDec DesignatorStatementDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorStatementAssignopErr DesignatorStatementAssignopErr);
    public void visit(DesignatorStatementAssignop DesignatorStatementAssignop);
    public void visit(SignleActPars SignleActPars);
    public void visit(ActParsList ActParsList);
    public void visit(Assignop Assignop);
    public void visit(DesignatorArr DesignatorArr);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(DesignatorExpr DesignatorExpr);
    public void visit(DesignatorDot DesignatorDot);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementsList StatementsList);
    public void visit(Statements Statements);
    public void visit(MultyStatment MultyStatment);
    public void visit(OneSingelStatement OneSingelStatement);
    public void visit(VarArgs VarArgs);
    public void visit(LastFormParFormPar LastFormParFormPar);
    public void visit(LastFormParVarArgs LastFormParVarArgs);
    public void visit(NoFormPars NoFormPars);
    public void visit(IsFormParsErr IsFormParsErr);
    public void visit(IsFormPars IsFormPars);
    public void visit(FormPar FormPar);
    public void visit(SingleFormPars SingleFormPars);
    public void visit(MultiFormParsErr MultiFormParsErr);
    public void visit(MultiFormPars MultiFormPars);
    public void visit(FormParsListSingle FormParsListSingle);
    public void visit(FormParsListManyErr FormParsListManyErr);
    public void visit(FormParsListMany FormParsListMany);
    public void visit(VoidMethod VoidMethod);
    public void visit(TypeMethod TypeMethod);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(NoArray NoArray);
    public void visit(IsArray IsArray);
    public void visit(NoExtends NoExtends);
    public void visit(Extends Extends);
    public void visit(NoVarList NoVarList);
    public void visit(VarList VarList);
    public void visit(RecordName RecordName);
    public void visit(RecordDecl RecordDecl);
    public void visit(NoClassDeclMethod NoClassDeclMethod);
    public void visit(ClassDeclMethod ClassDeclMethod);
    public void visit(VarAssign VarAssign);
    public void visit(SingleVarAssign SingleVarAssign);
    public void visit(VarAssignsErr VarAssignsErr);
    public void visit(VarAssigns VarAssigns);
    public void visit(VarDeclErr VarDeclErr);
    public void visit(VarDeclNoErr VarDeclNoErr);
    public void visit(ConstAssignBool ConstAssignBool);
    public void visit(ConstAssignChar ConstAssignChar);
    public void visit(ConstAssignNum ConstAssignNum);
    public void visit(SingleConstAssign SingleConstAssign);
    public void visit(ConstAssigns ConstAssigns);
    public void visit(ConstDecl ConstDecl);
    public void visit(NoDeclList NoDeclList);
    public void visit(DelcListRecord DelcListRecord);
    public void visit(DeclListClass DeclListClass);
    public void visit(DeclListVar DeclListVar);
    public void visit(DeclListConst DeclListConst);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
